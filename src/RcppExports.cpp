// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// bins
NumericVector bins(NumericVector u, NumericVector v);
RcppExport SEXP _nphawkes_bins(SEXP uSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type u(uSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(bins(u, v));
    return rcpp_result_gen;
END_RCPP
}
// get_dist_bins
NumericMatrix get_dist_bins(NumericMatrix dist_mat, NumericVector space_breaks);
RcppExport SEXP _nphawkes_get_dist_bins(SEXP dist_matSEXP, SEXP space_breaksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type dist_mat(dist_matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type space_breaks(space_breaksSEXP);
    rcpp_result_gen = Rcpp::wrap(get_dist_bins(dist_mat, space_breaks));
    return rcpp_result_gen;
END_RCPP
}
// get_mark
NumericVector get_mark(NumericVector marks, NumericVector mark_breaks);
RcppExport SEXP _nphawkes_get_mark(SEXP marksSEXP, SEXP mark_breaksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type marks(marksSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mark_breaks(mark_breaksSEXP);
    rcpp_result_gen = Rcpp::wrap(get_mark(marks, mark_breaks));
    return rcpp_result_gen;
END_RCPP
}
// get_time_bins
NumericMatrix get_time_bins(NumericMatrix time_mat, NumericVector time_breaks);
RcppExport SEXP _nphawkes_get_time_bins(SEXP time_matSEXP, SEXP time_breaksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type time_mat(time_matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type time_breaks(time_breaksSEXP);
    rcpp_result_gen = Rcpp::wrap(get_time_bins(time_mat, time_breaks));
    return rcpp_result_gen;
END_RCPP
}
// get_time
NumericMatrix get_time(NumericVector times);
RcppExport SEXP _nphawkes_get_time(SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type times(timesSEXP);
    rcpp_result_gen = Rcpp::wrap(get_time(times));
    return rcpp_result_gen;
END_RCPP
}
// init_p0
NumericMatrix init_p0(NumericVector times);
RcppExport SEXP _nphawkes_init_p0(SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type times(timesSEXP);
    rcpp_result_gen = Rcpp::wrap(init_p0(times));
    return rcpp_result_gen;
END_RCPP
}
// calc_br
double calc_br(NumericMatrix p0, NumericVector times);
RcppExport SEXP _nphawkes_calc_br(SEXP p0SEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type p0(p0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type times(timesSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_br(p0, times));
    return rcpp_result_gen;
END_RCPP
}
// get_k
NumericVector get_k(NumericMatrix p0, NumericVector marks, NumericVector mark_breaks);
RcppExport SEXP _nphawkes_get_k(SEXP p0SEXP, SEXP marksSEXP, SEXP mark_breaksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type p0(p0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type marks(marksSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mark_breaks(mark_breaksSEXP);
    rcpp_result_gen = Rcpp::wrap(get_k(p0, marks, mark_breaks));
    return rcpp_result_gen;
END_RCPP
}
// get_h
NumericVector get_h(NumericMatrix p0, NumericVector space_breaks, NumericMatrix dist_mat);
RcppExport SEXP _nphawkes_get_h(SEXP p0SEXP, SEXP space_breaksSEXP, SEXP dist_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type p0(p0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type space_breaks(space_breaksSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dist_mat(dist_matSEXP);
    rcpp_result_gen = Rcpp::wrap(get_h(p0, space_breaks, dist_mat));
    return rcpp_result_gen;
END_RCPP
}
// get_g
NumericMatrix get_g(NumericMatrix p0, NumericVector time_breaks, NumericMatrix time_mat);
RcppExport SEXP _nphawkes_get_g(SEXP p0SEXP, SEXP time_breaksSEXP, SEXP time_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type p0(p0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type time_breaks(time_breaksSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type time_mat(time_matSEXP);
    rcpp_result_gen = Rcpp::wrap(get_g(p0, time_breaks, time_mat));
    return rcpp_result_gen;
END_RCPP
}
// update_p
NumericMatrix update_p(NumericMatrix p0, NumericMatrix time_mat, NumericMatrix dist_mat, NumericVector mark_mat, NumericVector g, NumericVector h, NumericVector k, NumericVector space_breaks, NumericVector time_breaks, NumericVector mark_breaks, double br, NumericMatrix time_bins, NumericMatrix dist_bins, NumericVector lat);
RcppExport SEXP _nphawkes_update_p(SEXP p0SEXP, SEXP time_matSEXP, SEXP dist_matSEXP, SEXP mark_matSEXP, SEXP gSEXP, SEXP hSEXP, SEXP kSEXP, SEXP space_breaksSEXP, SEXP time_breaksSEXP, SEXP mark_breaksSEXP, SEXP brSEXP, SEXP time_binsSEXP, SEXP dist_binsSEXP, SEXP latSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type p0(p0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type time_mat(time_matSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dist_mat(dist_matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mark_mat(mark_matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type g(gSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type k(kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type space_breaks(space_breaksSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type time_breaks(time_breaksSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mark_breaks(mark_breaksSEXP);
    Rcpp::traits::input_parameter< double >::type br(brSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type time_bins(time_binsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dist_bins(dist_binsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lat(latSEXP);
    rcpp_result_gen = Rcpp::wrap(update_p(p0, time_mat, dist_mat, mark_mat, g, h, k, space_breaks, time_breaks, mark_breaks, br, time_bins, dist_bins, lat));
    return rcpp_result_gen;
END_RCPP
}
// check_p
double check_p(NumericMatrix p0, NumericMatrix p);
RcppExport SEXP _nphawkes_check_p(SEXP p0SEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type p0(p0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(check_p(p0, p));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_nphawkes_bins", (DL_FUNC) &_nphawkes_bins, 2},
    {"_nphawkes_get_dist_bins", (DL_FUNC) &_nphawkes_get_dist_bins, 2},
    {"_nphawkes_get_mark", (DL_FUNC) &_nphawkes_get_mark, 2},
    {"_nphawkes_get_time_bins", (DL_FUNC) &_nphawkes_get_time_bins, 2},
    {"_nphawkes_get_time", (DL_FUNC) &_nphawkes_get_time, 1},
    {"_nphawkes_init_p0", (DL_FUNC) &_nphawkes_init_p0, 1},
    {"_nphawkes_calc_br", (DL_FUNC) &_nphawkes_calc_br, 2},
    {"_nphawkes_get_k", (DL_FUNC) &_nphawkes_get_k, 3},
    {"_nphawkes_get_h", (DL_FUNC) &_nphawkes_get_h, 3},
    {"_nphawkes_get_g", (DL_FUNC) &_nphawkes_get_g, 3},
    {"_nphawkes_update_p", (DL_FUNC) &_nphawkes_update_p, 14},
    {"_nphawkes_check_p", (DL_FUNC) &_nphawkes_check_p, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_nphawkes(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
